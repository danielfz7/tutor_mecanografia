Escribir con rapidez y en forma correcta es una habilidad esencial para trabajar de manera efectiva con las computadoras e Internet. Para esta actividad usted tendrá que crear un repositorio privado en GitHub y añadir como desarrollador del proyecto al docente; y en este deberá subir una aplicación de GUI  en JAVA WEB  que pueda ayudar a los usuarios a aprender a “escribir al tacto” (es decir, escribir correctamente sin ver el teclado). 
La aplicación deberá mostrar un teclado virtual; similar a como se muestra en la figura, y deberá permitir al usuario ver lo que escribe en la pantalla, sin tener que ver el teclado real. Para ello podrá usar objetos JButton para representar las teclas. A medida que el usuario oprima cada tecla, la aplicación deberá resaltar el objeto JButton correspondiente en la GUI, y agregará el carácter a un objeto JTextArea que mostrará lo que ha escrito el usuario en un momento dado. 


import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class TutorApp {
    private JFrame frame;
    private JTextField textField;
    private JButton[][] buttons = new JButton[3][10];

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    TutorApp window = new TutorApp();
                    window.frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public TutorApp() {
        initialize();
    }

    private void initialize() {
        frame = new JFrame("Escritura táctil");
        frame.setBounds(100, 100, 600, 350);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(new BorderLayout(0, 0));

        textField = new JTextField();
        frame.getContentPane().add(textField, BorderLayout.NORTH);
        textField.setColumns(10);

        JPanel panel = new JPanel();
        frame.getContentPane().add(panel, BorderLayout.CENTER);
        panel.setLayout(new GridLayout(3, 10, 2, 2));

        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 10; j++) {
                buttons[i][j] = new JButton("");
                buttons[i][j].addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent arg0) {
                        textField.setText(textField.getText() + buttons[i][j].getText());
                    }
                });
                panel.add(buttons[i][j]);
            }
        }

        buttons[0][0].setText("Q");
        buttons[0][1].setText("W");
        buttons[0][2].setText("E");
        buttons[0][3].setText("R");
        buttons[0][4].setText("T");
        buttons[0][5].setText("Y");
        buttons[0][6].setText("U");
        buttons[0][7].setText("I");
        buttons[0][8].setText("O");
        buttons[0][9].setText("P");

        buttons[1][0].setText("A");
        buttons[1][1].setText("S");
        buttons[1][2].setText("D");
        buttons[1][3].setText("F");
        buttons[1][4].setText("G");
        buttons[1][5].setText("H");
        buttons[1][6].setText("J");
        buttons[1][7].setText("K");
        buttons[1][8].setText("L");

        buttons[2][0].setText("Z");
        buttons[2][1].setText("X");
        buttons[2][2].setText("C");
        buttons[2][3].setText("V");
        buttons[2][4].setText("B");
        buttons[2][5].setText("N");
        buttons[2][6].setText("M");
        buttons[2][7].setText(" ");
        buttons[2][8].setText(".");
    }
}
